namespace Zabota.Models;

using System.ComponentModel.DataAnnotations;
using Microsoft.EntityFrameworkCore;

public enum RecurrenceType
{
    Daily = 0, // –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
    SpecificDays = 1, // –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
}

public enum WeekDay
{
    Monday = 1,
    Tuesday = 2,
    Wednesday = 3,
    Thursday = 4,
    Friday = 5,
    Saturday = 6,
    Sunday = 7,
}

/// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Guid PK
public class User
{
    public Guid Id { get; set; } = Guid.NewGuid();

    // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    [MaxLength(200)]
    public string PasswordHash { get; set; } = default!;

    [MaxLength(320)]
    public string? Email { get; set; } = default!;

    [MaxLength(32)]
    public string? Phone { get; set; }

    // –ü—Ä–æ—Ñ–∏–ª—å
    [MaxLength(100)]
    public string LastName { get; set; } = default!;

    [MaxLength(100)]
    public string FirstName { get; set; } = default!;

    [MaxLength(100)]
    public string? MiddleName { get; set; }
    public DateOnly? DateOfBirth { get; set; }

    [MaxLength(20)]
    public string? Role { get; set; }

    public bool IsActive { get; set; }
    public bool IsVerified { get; set; }
    public DateTime CreatedAtUtc { get; set; }
    public bool IsPremium { get; set; } = false; // –ø—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø

    // üî∏ —Å–≤—è–∑—å —Å —Å–µ–º—å—ë–π (1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å -> 1 —Å–µ–º—å—è)
    public Guid? FamilyId { get; set; }
    public Family? Family { get; set; }

    // üî∏ –∞—Ç—Ä–∏–±—É—Ç—ã —á–ª–µ–Ω—Å—Ç–≤–∞ (—Ç.–∫. —Å–µ–º—å—è –æ–¥–Ω–∞ ‚Äî —Ö—Ä–∞–Ω–∏–º —Ç—É—Ç)
    [MaxLength(50)]
    public string RoleInFamily { get; set; } = "Member";
    public bool IsFamilyAdmin { get; set; } = false;

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    public ICollection<TaskItem> Tasks { get; set; } = new List<TaskItem>();
    public ICollection<BpRecord> BpRecords { get; set; } = new List<BpRecord>();
    public ICollection<Medication> Medications { get; set; } = new List<Medication>();
    public ICollection<ChatMessage> ChatMessages { get; set; } = new List<ChatMessage>();
}

/// –¢–∞–±–ª–∏—Ü–∞ –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
public class TaskItem
{
    public Guid Id { get; set; } = Guid.NewGuid();
    public Guid UserId { get; set; }

    [MaxLength(200)]
    public string Title { get; set; } = default!;

    [MaxLength(2000)]
    public string? Description { get; set; }
    public bool IsActive { get; set; } = true; // –∞–∫—Ç–∏–≤–Ω–∞—è/–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è
    public bool IsCompleted { get; set; } = false; // –∑–∞–≤–µ—Ä—à–µ–Ω–∞/–Ω–µ—Ç
    public DateTime CreatedAtUtc { get; set; } = DateTime.UtcNow;
    public DateTime? DueAtUtc { get; set; }

    public User User { get; set; } = default!;
}

/// –¢–∞–±–ª–∏—Ü–∞ –¥–∞–≤–ª–µ–Ω–∏—è/–ø—É–ª—å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
public class BpRecord
{
    public Guid Id { get; set; } = Guid.NewGuid();
    public Guid UserId { get; set; }

    // –∑–Ω–∞—á–µ–Ω–∏—è
    public int Systolic { get; set; } // –≤–µ—Ä—Ö–Ω–µ–µ
    public int Diastolic { get; set; } // –Ω–∏–∂–Ω–µ–µ
    public int? Pulse { get; set; } // –ø—É–ª—å—Å
    public DateTime MeasuredAtUtc { get; set; } = DateTime.UtcNow;

    [MaxLength(500)]
    public string? Note { get; set; }

    public User User { get; set; } = default!;
}

/// –õ–µ–∫–∞—Ä—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
public class Medication
{
    public Guid Id { get; set; } = Guid.NewGuid();
    public Guid UserId { get; set; }

    [MaxLength(200)]
    public string Name { get; set; } = default!;

    [MaxLength(1000)]
    public string? Notes { get; set; }

    public RecurrenceType Recurrence { get; set; } = RecurrenceType.Daily;

    // –í—Ä–µ–º–µ–Ω–∞ –ø—Ä–∏—ë–º–∞ (–Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å)
    public ICollection<MedicationTime> Times { get; set; } = new List<MedicationTime>();

    // –î–Ω–∏ –Ω–µ–¥–µ–ª–∏, –µ—Å–ª–∏ Recurrence = SpecificDays
    public ICollection<MedicationDay> Days { get; set; } = new List<MedicationDay>();

    public User User { get; set; } = default!;
}

/// –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏—ë–º–∞ –¥–ª—è –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ (—á–∞—Å—ã:–º–∏–Ω—É—Ç—ã)
public class MedicationTime
{
    public Guid Id { get; set; } = Guid.NewGuid();
    public Guid MedicationId { get; set; }

    public int Hour { get; set; } // 0..23
    public int Minute { get; set; } // 0..59

    public Medication Medication { get; set; } = default!;
}

/// –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –∫–æ–≥–¥–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ (–µ—Å–ª–∏ SpecificDays)
public class MedicationDay
{
    public Guid Id { get; set; } = Guid.NewGuid();
    public Guid MedicationId { get; set; }

    public WeekDay DayOfWeek { get; set; }

    public Medication Medication { get; set; } = default!;
}

/// –°–µ–º—å—è
public class Family
{
    public Guid Id { get; set; } = Guid.NewGuid();

    [MaxLength(200)]
    public string Name { get; set; } = default!;

    [MaxLength(12)]
    public string InviteCode { get; set; } = default!;
    public DateTime CreatedAtUtc { get; set; } = DateTime.UtcNow;

    public ICollection<User> Users { get; set; } = new List<User>();

    public ICollection<ChatMessage> Messages { get; set; } = new List<ChatMessage>();
}

/// –°–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ —Å–µ–º—å–∏
public class ChatMessage
{
    public Guid Id { get; set; } = Guid.NewGuid();

    public Guid FamilyId { get; set; }
    public Guid AuthorUserId { get; set; }

    [MaxLength(4000)]
    public string Text { get; set; } = default!;
    public DateTime SentAtUtc { get; set; } = DateTime.UtcNow;
    public DateTime? EditedAtUtc { get; set; }
    public bool IsDeleted { get; set; } = false;

    public Family Family { get; set; } = default!;
    public User AuthorUser { get; set; } = default!;
}
